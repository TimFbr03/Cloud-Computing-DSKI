# Install prerequisites
- name: Install prerequisites
  apt:
    name:
      - curl
      - gnupg
      - lsb-release
    update_cache: yes
    state: present

# k3s server installation (run only on server)
- name: Install k3s server
  shell: curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644
  args:
    creates: /usr/local/bin/k3s
  when: "'k3s_server' in group_names"

- name: Wait for k3s server to be ready
  shell: k3s kubectl get node
  register: k3s_status
  retries: 10
  delay: 30
  until: k3s_status.rc == 0
  when: "'k3s_server' in group_names"

- name: Save node token for agents
  command: cat /var/lib/rancher/k3s/server/node-token
  register: node_token
  when: "'k3s_server' in group_names"

- name: Copy token to localhost
  copy:
    content: "{{ node_token.stdout }}"
    dest: "./node-token"
    mode: '0600'
  delegate_to: localhost
  become: no
  when: "'k3s_server' in group_names"

- name: Install Helm (server only)
  shell: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  args:
    creates: /usr/local/bin/helm
  when: "'k3s_server' in group_names"

- name: Create namespace for Helm release
  shell: /usr/local/bin/k3s kubectl create namespace "{{ helm_namespace }}" || true
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  when: "'k3s_server' in group_names"

- name: Copy Helm chart to server
  copy:
    src: "{{ playbook_dir }}/../helm/"
    dest: "{{ helm_chart_path }}/"
    mode: '0644'
    remote_src: no
    directory_mode: '0755'
  when: "'k3s_server' in group_names"

- name: Deploy multi-service Helm chart
  shell: |
    helm upgrade --install "{{ helm_release_name }}" "{{ helm_chart_path }}" \
      --namespace "{{ helm_namespace }}" \
      --create-namespace \
      -f "{{ helm_chart_path }}/values.yaml"
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  register: helm_result
  retries: 5
  delay: 30
  until: helm_result.rc == 0
  when: "'k3s_server' in group_names"

- name: Install Nginx Ingress Controller
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  when: "'k3s_server' in group_names"

- name: Install k3s agent
  shell: |
    curl -sfL https://get.k3s.io | K3S_URL="https://{{ hostvars[groups['k3s_server'][0]].inventory_hostname }}:6443" \
    K3S_TOKEN="{{ lookup('file', './node-token') }}" sh -
  args:
    creates: /usr/local/bin/k3s
  when: "'k3s_agent' in group_names"
