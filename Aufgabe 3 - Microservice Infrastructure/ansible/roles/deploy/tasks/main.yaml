# tasks:
- name: Install curl and other prerequisites
  apt:
    name:
      - curl
      - gnupg
      - lsb-release
    update_cache: yes
    state: present

- name: Install k3s (lightweight Kubernetes)
  shell: curl -sfL https://get.k3s.io | sh -
  args:
    creates: /usr/local/bin/k3s

- name: Wait for k3s to be ready
  shell: k3s kubectl get node
  register: k3s_status
  retries: 10
  delay: 5
  until: k3s_status.rc == 0


- name: Install Helm
  shell: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  args:
    creates: /usr/local/bin/helm

- name: Create namespace for Helm release
  shell: |
    /usr/local/bin/k3s kubectl create namespace "{{ helm_namespace }}" || true
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Install Traefik CRDs
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/traefik/traefik/v2.10/docs/content/reference/dynamic-configuration/kubernetes-crd-definition-v1alpha1.yml
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Copy Helm chart to remote host
  copy:
    src: "{{ playbook_dir }}/../helm/"
    dest: "{{ helm_chart_path }}/"
    mode: '0644'
    remote_src: no
    directory_mode: '0755'

- name: Build Helm chart dependencies
  shell: helm dependency build "{{ helm_chart_path }}"
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  args:
    chdir: "{{ helm_chart_path }}"

- name: Deploy Helm chart
  shell: |
    helm upgrade --install "{{ helm_release_name }}" "{{ helm_chart_path }}" \
      --namespace todo-app \
      --create-namespace \
      -f "{{ helm_chart_path }}/values.yaml"
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Ensure Traefik service is exposed
  shell: |
    kubectl -n kube-system patch service traefik -p '{"spec":{"externalTrafficPolicy":"Local"}}'
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml