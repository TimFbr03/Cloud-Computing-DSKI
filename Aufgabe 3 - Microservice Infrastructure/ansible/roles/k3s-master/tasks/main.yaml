- name: Install k3s master
  become: true
  shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--write-kubeconfig-mode 644 --flannel-iface ens3" sh -
  args:
    creates: /etc/rancher/k3s/k3s.yaml

- name: Configure CoreDNS for internal domain resolution
  become: true
  copy:
    dest: /var/lib/rancher/k3s/server/manifests/coredns-custom.yaml
    content: |
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: coredns-custom
        namespace: kube-system
      data:
        internal.server: |
          internal.cluster:53 {
              errors
              cache 30
              forward . /etc/resolv.conf
          }

- name: Restart CoreDNS
  become: true
  shell: |
    kubectl -n kube-system rollout restart deployment coredns
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Get join token
  shell: cat /var/lib/rancher/k3s/server/node-token
  register: k3s_token
  changed_when: false

- name: Save join token for workers
  copy:
    content: "{{ k3s_token.stdout }}"
    dest: /tmp/k3s_token
    mode: '0600'

# -------------------------------
# Helm Installation & Setup
# -------------------------------

- name: Download Helm install script
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    dest: /tmp/get_helm.sh
    mode: '0700'

- name: Install Helm
  become: true
  shell: /tmp/get_helm.sh
  args:
    creates: /usr/local/bin/helm

- name: Ensure .kube directory exists
  become: true
  file:
    path: /root/.kube
    state: directory
    mode: '0700'

- name: Copy kubeconfig to /root/.kube/config
  become: true
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: /root/.kube/config
    remote_src: yes
    mode: '0600'

- name: Ensure kubeconfig is accessible
  shell: cp /etc/rancher/k3s/k3s.yaml /root/.kube/config
  become: true

# -------------------------------
# Install NGINX Ingress Controller
# -------------------------------

- name: Add ingress-nginx Helm repo
  shell: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Update Helm repos
  shell: helm repo update
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Install ingress-nginx via Helm with LoadBalancer
  shell: |
    helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
    helm repo update
    helm install ingress-nginx ingress-nginx/ingress-nginx \
      --namespace ingress-nginx --create-namespace \
      --set controller.service.type=LoadBalancer
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  args:
    creates: /var/lib/rancher/k3s/server/manifests/ingress-nginx.yaml


# -------------------------------
# Install Prometheus using Helm
# -------------------------------

- name: Add prometheus-community Helm repo
  shell: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Update Helm repos again
  shell: helm repo update
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Install Prometheus via Helm
  shell: |
    helm install prometheus prometheus-community/prometheus \
      --create-namespace --namespace monitoring
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

# -------------------------------
# Port forwarding for Prometheus
# -------------------------------

- name: Copy Prometheus ingress manifest
  copy:
    src: prometheus-ingress.yaml
    dest: /tmp/prometheus-ingress.yaml
    mode: '0644'

- name: Wait for ingress-nginx controller pods to be ready
  shell: |
    kubectl wait --namespace ingress-nginx \
      --for=condition=Ready pod \
      --selector=app.kubernetes.io/component=controller \
      --timeout=180s
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

- name: Apply Prometheus ingress
  shell: kubectl apply -f /tmp/prometheus-ingress.yaml
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml