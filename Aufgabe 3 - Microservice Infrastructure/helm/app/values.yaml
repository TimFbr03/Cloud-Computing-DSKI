backend:
  image: "ghcr.io/timfbr03/cloud-computing-dski/backend:latest"
  replicas: 2
  containerPort: 3001
  servicePort: 80
  env:
    - name: DATABASE_URL
      value: "postgresql://todouser:todopass@database:5432/todoapp"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3001"

frontend:
  image: "ghcr.io/timfbr03/cloud-computing-dski/frontend:latest"
  replicas: 2
  containerPort: 3000
  servicePort: 80
  env:
    - name: REACT_APP_API_URL
      value: "http://backend/api"
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"

database:
  image: "ghcr.io/timfbr03/cloud-computing-dski/database:latest"
  replicas: 1
  containerPort: 5432
  servicePort: 5432
  env:
    - name: POSTGRES_USER
      value: "todouser"
    - name: POSTGRES_PASSWORD
      value: "todopass"
    - name: POSTGRES_DB
      value: "todoapp"
    - name: POSTGRES_LISTEN_ADDRESSES
      value: "*"

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
  hosts:
    - host: ""  # catch-all
      paths:
        - path: /api(/|$)(.*)
          pathType: Prefix
          backend:
            service:
              name: backend
              port:
                number: 80
        - path: /(.*)
          pathType: Prefix
          backend:
            service:
              name: frontend
              port:
                number: 80

# ==========================
# Optional: Nginx ingress controller
# ==========================
controller:
  hostNetwork: true
  dnsPolicy: ClusterFirstWithHostNet
  service:
    type: NodePort
    nodePorts:
      http: 80     # Expose HTTP on port 80 of each node
      https: 443   # Expose HTTPS on port 443 of each node